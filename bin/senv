#!/usr/bin/env bash

usage() {
  echo "usage: senv [-e | -d] <file>"
}

unset encrypt decrypt file

if [ "$1" = "-e" ] || [ "$1" = "--encrypt" ]; then
  encrypt=1
  [ -t 0 ] && file=".env"
  shift
fi

if [ "$1" = "-d" ] || [ "$1" = "--decrypt" ]; then
  decrypt=1
  [ -t 0 ] && file=".senv"
  shift
fi

if [ "${1:0:1}" = "-" ]; then
  echo "senv: invalid option: $1" >&2
  usage >&2
  exit 1
fi

if [ -n "$1" ]; then
  file="$1"
fi

if [ ! -t 0 ] && [ -z "$file" ]; then
  file="/dev/stdin"
elif [ -z "$file" ]; then
  usage >&2
  exit 1
elif [ ! -e "$file" ]; then
  echo "senv: $file: No such file or directory" >&2
  exit 1
elif [ ! -f "$file" ]; then
  echo "senv: $file: Is a directory" >&2
  exit 1
fi

if [ -z "$SENV_KEY" ]; then
  SENV_KEY=$(ssh-add -l | head -n1 | awk -F ' ' '{print $3}')
fi

if [ ! -e "$SENV_KEY" ]; then
  echo "senv: $SENV_KEY: No such file or directory" >&2
  exit 1
fi

findpass() {
  security find-generic-password -ga $SENV_KEY 2>&1 1>/dev/null |
    head -n1 |
    cut -d ' ' -f 2 |
    sed "s/\"//g"
}

unset passin
if [ -n "$encrypt" ] || [ -n "$decrypt" ]; then
  PASS=$(findpass)
  if [ "$?" -eq 0 ] && [ -n "$PASS" ]; then
    export PASS
    passin="-passin env:PASS"
  fi
fi

if [ -n "$encrypt" ]; then
  while read line; do
    result=$(echo "$line" | openssl rsautl -encrypt -inkey "$SENV_KEY" $passin | openssl base64 -A)
    echo $result
  done < $file
  exit 0
elif [ -n "$decrypt" ]; then
  while read line; do
    result=$(echo "$line" | openssl base64 -A -d | openssl rsautl -decrypt -inkey "$SENV_KEY" $passin 2>/dev/null)
    echo $result
  done < $file
  exit 0
else
  usage >&2
  exit 1
fi
